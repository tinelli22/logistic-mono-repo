/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { LogInputModel } from "./models/input.model";
import { LogButtonModel } from "./models/button.model";
export namespace Components {
    interface LogButton {
        "backgroundVariant"?: string;
        "behavior"?: 'static' | 'hover';
        "colorVariant"?: string;
        "disable"?: boolean;
        "label": string;
    }
    interface LogCard {
        "backgroundColor"?: string;
        "backgroundColorHover"?: string;
    }
    interface LogIcon {
        "color"?: string;
        "name"?: string;
    }
    interface LogInput {
        "disabled"?: boolean;
        "getInputRef": () => Promise<HTMLInputElement>;
        "name": string;
        "placeHolder"?: string;
    }
    interface LogInputSearch {
        "buttonProps": LogButtonModel;
        "inputProps": LogInputModel;
    }
}
export interface LogButtonCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLLogButtonElement;
}
export interface LogInputCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLLogInputElement;
}
export interface LogInputSearchCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLLogInputSearchElement;
}
declare global {
    interface HTMLLogButtonElement extends Components.LogButton, HTMLStencilElement {
    }
    var HTMLLogButtonElement: {
        prototype: HTMLLogButtonElement;
        new (): HTMLLogButtonElement;
    };
    interface HTMLLogCardElement extends Components.LogCard, HTMLStencilElement {
    }
    var HTMLLogCardElement: {
        prototype: HTMLLogCardElement;
        new (): HTMLLogCardElement;
    };
    interface HTMLLogIconElement extends Components.LogIcon, HTMLStencilElement {
    }
    var HTMLLogIconElement: {
        prototype: HTMLLogIconElement;
        new (): HTMLLogIconElement;
    };
    interface HTMLLogInputElement extends Components.LogInput, HTMLStencilElement {
    }
    var HTMLLogInputElement: {
        prototype: HTMLLogInputElement;
        new (): HTMLLogInputElement;
    };
    interface HTMLLogInputSearchElement extends Components.LogInputSearch, HTMLStencilElement {
    }
    var HTMLLogInputSearchElement: {
        prototype: HTMLLogInputSearchElement;
        new (): HTMLLogInputSearchElement;
    };
    interface HTMLElementTagNameMap {
        "log-button": HTMLLogButtonElement;
        "log-card": HTMLLogCardElement;
        "log-icon": HTMLLogIconElement;
        "log-input": HTMLLogInputElement;
        "log-input-search": HTMLLogInputSearchElement;
    }
}
declare namespace LocalJSX {
    interface LogButton {
        "backgroundVariant"?: string;
        "behavior"?: 'static' | 'hover';
        "colorVariant"?: string;
        "disable"?: boolean;
        "label"?: string;
        "onClickButton"?: (event: LogButtonCustomEvent<any>) => void;
    }
    interface LogCard {
        "backgroundColor"?: string;
        "backgroundColorHover"?: string;
    }
    interface LogIcon {
        "color"?: string;
        "name"?: string;
    }
    interface LogInput {
        "disabled"?: boolean;
        "name"?: string;
        "onEntered"?: (event: LogInputCustomEvent<string>) => void;
        "onFocused"?: (event: LogInputCustomEvent<any>) => void;
        "onFocusedOut"?: (event: LogInputCustomEvent<any>) => void;
        "onGetValue"?: (event: LogInputCustomEvent<string>) => void;
        "placeHolder"?: string;
    }
    interface LogInputSearch {
        "buttonProps"?: LogButtonModel;
        "inputProps"?: LogInputModel;
        "onValue"?: (event: LogInputSearchCustomEvent<string>) => void;
    }
    interface IntrinsicElements {
        "log-button": LogButton;
        "log-card": LogCard;
        "log-icon": LogIcon;
        "log-input": LogInput;
        "log-input-search": LogInputSearch;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "log-button": LocalJSX.LogButton & JSXBase.HTMLAttributes<HTMLLogButtonElement>;
            "log-card": LocalJSX.LogCard & JSXBase.HTMLAttributes<HTMLLogCardElement>;
            "log-icon": LocalJSX.LogIcon & JSXBase.HTMLAttributes<HTMLLogIconElement>;
            "log-input": LocalJSX.LogInput & JSXBase.HTMLAttributes<HTMLLogInputElement>;
            "log-input-search": LocalJSX.LogInputSearch & JSXBase.HTMLAttributes<HTMLLogInputSearchElement>;
        }
    }
}
